---
title: "Rated R"
subtitle: "The Language for Mature Data Analysts"
author: "Zsuzsa Holler (Emarsys) and Marc Kaufmann (CEU)"
format: revealjs
editor: visual
---

## Rated R

::: notes
Marc: - rated R - R is very beginner-friendly, it is why I teach an intro with tidyverse ... "You will hear people complain about R being unpleasant, so let's look at some DATA about actual users." Zsuzsa: - put together a interactive web app with dual purpose: - demonstrates how easy it is to do it in R (less than 40 lines of code) - shows some data that supports my argument - comment on general trends: Python more popular than R but as a true data scientist I disregard this - in some areas python and R are neck and neck - only search term that shows some promise for Stata is "panel data"
:::

![Stackoverflow 2022 Developer Survey](stackoverflow-survey-2022-screenshot.png)

::: notes
Zsuzsa:

People complain about R's syntax. As a general-purpose programming language, it has its flaws. But R shines in data analysis:

1.  `tidyverse` more popular than `pandas` : in Python terms, `pandas` is a good, but ultimately shallow copy of `tidyverse`
2.  Why is Stata not included? The survey, as today's debate, is about coding *languages* - not clicky-clicky tools. That is also why Stata is effectively disqualified from the debate: it is not a coding language.

R is great and beginner-friendly for data analysis (`tidyverse`, `ggplot`); Python is a close second; Stata, is not even a programming language, and exits the race at the starting line.
:::

## 

::: notes
Marc: In summary...
:::

::: {.fragment style="text-align: center; font-size: 1.3em; margin-bottom: 2em; color: blue; margin-top: 2em"}
R - the Language for Mature Data Analysts
:::

::: {.fragment style="text-align: center; font-size: 1.2em; margin-bottom: 2em; color: green"}
Python - there is one, and only one, way: copy R

``` {.python style="font-size: 0.8em; width: 50%; margin: 0 auto"}
# Warning: creates a shallow copy
pandas = tidyverse.copy()   
```
:::

::: {.fragment style="text-align: center; font-size: 1.2em; color: grey"}
\$tata - the Gooey for Goofy
:::

## R trends look shiny

[Shiny Data Analysis Trends](https://zsuzsaholler.shinyapps.io/rated-r/){target="blank"}

## Tidyverse {auto-animate="true"}

::: notes
Zsuzsa:

-   R code with tidyverse syntax + pipe operator is tidy and readable
-   Maybe: mention that a great way to learn about the tidyverse are the vignettes
-   data preparation: this is where we usually spend a big chuck of our time (maybe mention Kaggle)
-   model fitting and forecast in 3 lines of code
-   plotting: highlight `ggplot2`, which was also copied in Python At the end mention or highlight the functions and how it allows to abstract things.
:::

```{r}
#| echo: true
#| eval: false
# ...
gtrends_data_ts <- gtrends(input$keyword) %>% 
  mutate_at(vars(-date), as.numeric) %>% 
  pivot_longer(!date, names_to = "keyword", values_to = "hits") %>% 
  mutate(date = yearmonth(date)) %>%
  mutate(keyword = factor(keyword, levels=levels, labels=languages)) %>%
  as_tsibble(index = date, key = keyword)
```

## Tidyverse {auto-animate="true"}

```{r}
#| echo: true
#| eval: false
#| code-line-numbers: 8-10
# ...
gtrends_data_ts <- gtrends(input$keyword) %>% 
  mutate_at(vars(-date), as.numeric) %>% 
  pivot_longer(!date, names_to = "keyword", values_to = "hits") %>% 
  mutate(date = yearmonth(date)) %>%
  mutate(keyword = factor(keyword, levels=levels, labels=languages)) %>%
  as_tsibble(index = date, key = keyword)
forecast <- gtrends_data_ts %>%
  model(ARIMA(hits)) %>% 
  forecast(h = "24 months")
```

## Tidyverse {auto-animate="true"}

```{r}
#| echo: true
#| eval: false
#| code-line-numbers: 11-11
# ...
gtrends_data_ts <- gtrends(input$keyword) %>% 
  mutate_at(vars(-date), as.numeric) %>% 
  pivot_longer(!date, names_to = "keyword", values_to = "hits") %>% 
  mutate(date = yearmonth(date)) %>%
  mutate(keyword = factor(keyword, levels=levels, labels=languages)) %>%
  as_tsibble(index = date, key = keyword)
forecast <- gtrends_data_ts %>%
  model(ARIMA(hits)) %>% 
  forecast(h = "24 months")
gtrends_plot(gtrends_data_ts, forecast)
```

## Functions, Classes, and Abstraction

::: fragment
R and Python have:
:::

::: incremental
-   Functions
-   Classes
-   Packages
-   ...
:::

::: notes
Marc:

-   R has abstractions for mature programming. Python, being a real programming language, does similarly.

-   What does Stata have?

-   Let's watch a running Stata program: .doh files (video or screenshot)
:::

## Running a Stata Script

::: notes
Marc:

-   Video or screenshot of running Stata code with Homer Simpson's "D'oh"s

-   If you are a programmer, you can use makefiles for 'replicability'. Don't believe me? Look at Miklos Koren's well-documented Stata scripts (they are scripts, not code).

-   Hand over to Zsuzsa by saying "We should also say something positive about Stata."
:::

::: {.fragment .fade-in}
![](koren-peto-doh-files.png)
:::

## Running a Stata Script

![](final-running-stata.mp4)

::: {.fragment style="font-size: 1.2em;"}
D'Oh files: Stata's way of reusing code!
:::

::: {.fragment style="font-size: 1.2em;"}
[R is functional]{style="color: blue"}[, Stata is disfunctional.]{.fragment style="color: red;"}
:::

## Our Favorite Stata Code

::: notes
Zsuzsa:

-   Show it as a transition to the final slide. Something like "Here is some Stata code that even I can get behind."
-   We can drop this slide if we have too much to cover
:::

. . .

```{stata style="margin-top: 2em;"}
#| eval: false
#| echo: true

rsource using my_R_code.R, rpath("/usr/local/bin/R")

roptions(`"--vanilla"')

```

## 

::: notes
Zsuzsa:

-   Show full code in Rstudio (not to explain, only to highlight)

-   Mention the link to play with (but only if we know that the app will work without cheating! Or else we'll get tough questions from the crowd).

Marc takes the quiz question.
:::

::: {style="text-align: center; font-size: 2em; color: blue;"}
Vote R
:::

::: {.fragment style="text-align: center; font-size: 1.2em;"}
If you can vote, you are mature enough for R.
:::

::: {.fragment style="text-align: center; margin: 2em 0em 1em 0em;"}
Code, app, and slides written and compiled in R and RStudio

- <https://github.com/MarcKaufmann/rated-R/>
- <https://zsuzsaholler.shinyapps.io/rated-r/>
:::

::: {.fragment style="text-align: center;"}
Quiz: What do R, Python, and Stata store in the CC variable?
:::
